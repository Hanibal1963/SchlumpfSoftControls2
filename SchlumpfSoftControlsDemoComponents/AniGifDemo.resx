<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AniGif.Gif" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAA7
</value>
  </data>
</root>