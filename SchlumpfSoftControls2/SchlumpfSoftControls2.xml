<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>SchlumpfSoftControls2</name>
  </assembly>
  <members>
    <member name="N:SchlumpfSoft.Controls.AniGifControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.AniGifControl.AniGif">
      <summary>
Control zum anzeigen von animierten Grafiken.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.AniGifControl.AniGif.NoAnimation">
      <summary>
Wird ausgelöst wenn die Grafik nicht animiert werden kann.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.AutoPlay">
      <summary>
Legt fest ob die Animation sofort nach dem laden gestartet wird.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.Gif">
      <summary>
Gibt die animierte Gif-Grafik zurück oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.GifSizeMode">
      <summary>
Gibt den Anzeigemodus (Skalierung/Ausrichtung) der GIF-Grafik zurück oder legt ihn fest.</summary>
      <remarks>
<b>Verhalten je Modus:</b> <para>- <see cref="SizeMode.Normal" />: Das Bild wird unverändert an Position (0,0) gezeichnet. Ist das Bild größer als das Control, wird es abgeschnitten.</para> <para>- <see cref="SizeMode.CenterImage" />: Das Bild wird unverändert zentriert gezeichnet. Es kann abgeschnitten werden, wenn es größer als das Control ist.</para> <para>- <see cref="SizeMode.Zoom" />: Das Bild wird proportional skaliert und zentriert. Die Skalierung richtet sich nach <see cref="ZoomFactor" /> (1–100%). Die Berechnung orientiert sich an der Controlgröße, das Seitenverhältnis bleibt erhalten.</para> <para>- <see cref="SizeMode.Fill" />: Das Bild wird proportional so skaliert, dass das Control vollständig gefüllt wird. Dadurch kann das Bild an einer Seite zugeschnitten werden; es wird zentriert gezeichnet.</para> <b> Rendering:</b> <para>Für <see cref="SizeMode.Zoom" /> und <see cref="SizeMode.Fill" /> werden hochwertige Interpolations- und Glättungseinstellungen (HighQualityBicubic, HighQuality) verwendet, um die Bildqualität bei der Skalierung zu verbessern.</para> Ablauf/Seiteneffekte: <para>Beim Setzen dieser Eigenschaft wird das Control über <see cref="System.Windows.Forms.Control.Invalidate" /> neu gezeichnet. Die Bilddaten werden nicht verändert; nur die Darstellung ändert sich. Es wird kein eigener Ereignis-Callback ausgelöst.</para> <b> Hinweise:</b> <para>- Der Standardwert wird in <c>InitializeValues</c> gesetzt.</para> <para>- <see cref="ZoomFactor" /> wirkt ausschließlich, wenn der Modus <see cref="SizeMode.Zoom" /> aktiv ist.</para> <para>- Die Eigenschaft ist im Designer sichtbar (Kategorie "Behavior").</para></remarks>
      <seealso cref="P:SchlumpfSoft.Controls.AniGifControl.AniGif.ZoomFactor">
ZoomFactor</seealso>
      <seealso cref="P:SchlumpfSoft.Controls.AniGifControl.AniGif.Gif">
Gif</seealso>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.CustomDisplaySpeed">
      <summary>
Legt fest ob die benutzerdefinierte Anzeigegeschwindigkeit oder <br />die in der Datei festgelegte Geschwindigkeit benutzt wird.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.FramesPerSecond">
      <summary>
Legt die benutzerdefinierte Anzeigegeschwindigkeit in Bildern/Sekunde fest.</summary>
      <remarks>
Bewirkt nur eine Änderung wenn <seealso cref="CustomDisplaySpeed" /> auf True festgelegt ist.</remarks>
      <seealso cref="P:SchlumpfSoft.Controls.AniGifControl.AniGif.CustomDisplaySpeed">
CustomDisplaySpeed</seealso>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.ZoomFactor">
      <summary>
Legt den Zoomfaktor fest.</summary>
      <remarks>
Bewirkt nur eine Änderung wenn <seealso cref="GifSizeMode" /> auf <seealso cref="SizeMode.Zoom" /> festgelegt ist.</remarks>
      <seealso cref="P:SchlumpfSoft.Controls.AniGifControl.AniGif.GifSizeMode">
GifSizeMode</seealso>
      <seealso cref="F:SchlumpfSoft.Controls.AniGifControl.SizeMode.Zoom">
SizeMode.Zoom</seealso>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.MaximumSize">
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.MinimumSize">
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.Padding">
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.RightToLeft">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.Text">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.AllowDrop">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.AutoScrollOffset">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.AutoSize">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.BackgroundImage">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.BackgroundImageLayout">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.ContextMenuStrip">
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.Dock">
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.Font">
    </member>
    <member name="P:SchlumpfSoft.Controls.AniGifControl.AniGif.ForeColor">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.AniGifControl.AniGif.#ctor">
      <summary>
Initialisiert eine neue Instanz von <see cref="SchlumpfSoft.Controls.AniGifControl.AniGif" />.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.AniGifControl.AniGif.InitLayout">
      <summary>
Führt Layout-Initialisierung durch und startet ggf. die GIF-Animation.</summary>
      <remarks>
Stoppt vorher eine bestehende Animation um Mehrfach-Registrierungen zu vermeiden.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.AniGifControl.AniGif.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
Zeichnet das aktuelle Frame des GIFs unter Berücksichtigung der Skalierung.</summary>
      <remarks>
Aktualisiert die Animation bei automatischer Geschwindigkeitssteuerung.</remarks>
      <param name="e">
Zeicheninformationen.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.AniGifControl.AniGif.Dispose(System.Boolean)">
      <summary>
Gibt Ressourcen frei und stoppt ggf. laufende Animationen.</summary>
      <param name="disposing">
True um verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.AniGifControl.AniGif.Dispose">
      <summary>
IDisposable Support</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.AniGifControl.AniGif.StartAnimation">
      <summary>
Startet die Animation (falls noch nicht aktiv).</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.AniGifControl.AniGif.StopAnimation">
      <summary>
Stoppt die Animation und beendet Timer sowie ImageAnimator.</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.AniGifControl.SizeMode">
      <summary>
Auflistung der Anzeigemodi</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.AniGifControl.SizeMode.Normal">
      <summary>
Die Grafik wird in Originalgröße angezeigt (Ausrichtung oben links).</summary>
      <remarks>
Wenn die grafik größer als das Control ist, werden nicht anzeigbare Teile abgeschnitten.</remarks>
    </member>
    <member name="F:SchlumpfSoft.Controls.AniGifControl.SizeMode.CenterImage">
      <summary>
Die Grafik wird in Originalgröße angezeigt (zentrierte Ausrichtung).</summary>
      <remarks>
Wenn die grafik größer als das Control ist, werden nicht anzeigbare Teile abgeschnitten.</remarks>
    </member>
    <member name="F:SchlumpfSoft.Controls.AniGifControl.SizeMode.Zoom">
      <summary>
Die Größe der Grafik kann an die Größe des Controls angepasst werden (zentrierte Ausrichtung 1-100%).</summary>
      <remarks>
Die Grafik passt immer in das Control.</remarks>
    </member>
    <member name="F:SchlumpfSoft.Controls.AniGifControl.SizeMode.Fill">
      <summary>
Die Grafik füllt das Control immer vollständig aus (zentrierte Ausrichtung ).</summary>
      <remarks>
Kleinere Grafiken werden gezoomt und größere verkleinert.</remarks>
    </member>
    <member name="N:SchlumpfSoft.Controls.ColorProgressBarControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar">
      <summary>
Control zum Anzeigen eines farbigen Fortschrittbalkens.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.Click">
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.Value">
      <summary>
Gibt den Gesamtfortschritt des Fortschrittsbalkens zurück oder legt diesen fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.ProgressMaximumValue">
      <summary>
Gibt den Maximalwert des Fortschrittsbalkens zurück oder legt diesen fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.BarColor">
      <summary>
Gibt die Farbe des Fortschrittsbalkens zurück oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.EmptyColor">
      <summary>
Gibt die Farbe des leeren Fortschrittsbalkens zurück oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.BorderColor">
      <summary>
Gibt die Farbe des Rahmens zurück oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.ShowBorder">
      <summary>
Gibt an, ob der Rahmen auf der Fortschrittsanzeige aktiviert ist.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.IsGlossy">
      <summary>
Gibt an, ob der Glanz auf der Fortschrittsleiste angezeigt wird.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.BackColor">
      <summary>
Ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.BackgroundImage">
      <summary>
Ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.BackgroundImageLayout">
      <summary>
Ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.BorderStyle">
      <summary>
Ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.ForeColor">
      <summary>
Ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.Padding">
      <summary>
Ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.ColorProgressBarControl.ColorProgressBar.#ctor">
    </member>
    <member name="N:SchlumpfSoft.Controls.DriveWatcherControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.DriveWatcherControl.DriveAddedEventArgs">
      <summary>
Übergibt die Argumente für das hinzugefügte Laufwerk.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.DriveWatcherControl.DriveAddedEventArgs.DriveName">
      <summary>
Ruft den Namen eines Laufwerks ab, z.B. C:\.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.DriveWatcherControl.DriveAddedEventArgs.VolumeLabel">
      <summary>
Ruft die Volumebezeichnung eines Laufwerks ab oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.DriveWatcherControl.DriveAddedEventArgs.AvailableFreeSpace">
      <summary>
Gibt die Gesamtmenge an verfügbarem freiem Speicherplatz in Bytes an, die auf einem Laufwerk verfügbar ist.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.DriveWatcherControl.DriveAddedEventArgs.TotalFreeSpace">
      <summary>
Ruft die Gesamtmenge an freiem Speicherplatz in Bytes ab, die auf einem Laufwerk verfügbar ist.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.DriveWatcherControl.DriveAddedEventArgs.TotalSize">
      <summary>
Ruft die Gesamtgröße des Speicherplatzes in Bytes auf einem Laufwerk ab.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.DriveWatcherControl.DriveAddedEventArgs.DriveFormat">
      <summary>
Ruft den Namen des Dateisystems ab, z. B. NTFS oder FAT32.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.DriveWatcherControl.DriveAddedEventArgs.DriveType">
      <summary>
Ruft den Laufwerkstyp ab, wie z. B. CD-ROM, Wechseldatenträger, Netzlaufwerk oder lokales Festplattenlaufwerk.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.DriveWatcherControl.DriveAddedEventArgs.IsReady">
      <summary>
Ruft einen Wert ab, der angibt, ob ein Laufwerk bereit ist.</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.DriveWatcherControl.DriveRemovedEventArgs">
      <summary>
Übergibt das entfernte Laufwerk.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.DriveWatcherControl.DriveRemovedEventArgs.DriveName">
      <summary>
Ruft den Namen eines Laufwerks ab, z.B. C:\.</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.DriveWatcherControl.DriveWatcher">
      <summary>
Steuerelement um die Laufwerke zu überwachen.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.DriveWatcherControl.DriveWatcher.DriveAdded">
      <summary>
Wird ausgelöst wenn ein Laufwerk hinzugefügt wurde.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.DriveWatcherControl.DriveWatcher.DriveRemoved">
      <summary>
Wird ausgelöst wenn ein Laufwerk entfernt wurde.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.DriveWatcherControl.DriveWatcher.#ctor">
    </member>
    <member name="M:SchlumpfSoft.Controls.DriveWatcherControl.DriveWatcher.#ctor(System.ComponentModel.IContainer)">
      <param name="container">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.DriveWatcherControl.DriveWatcher.Dispose(System.Boolean)">
      <summary>
Die Komponente überschreibt den Löschvorgang zum Bereinigen der Komponentenliste.</summary>
      <param name="disposing">
</param>
    </member>
    <member name="N:SchlumpfSoft.Controls.ExplorerTreeViewControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView">
      <summary>
Stellt ein Steuerelement zur Anzeige und Navigation der Verzeichnisstruktur des Computers bereit.</summary>
      <remarks>
Ermöglicht die Auswahl von Laufwerken, speziellen Ordnern und Unterordnern in einer hierarchischen Baumstruktur.</remarks>
    </member>
    <member name="E:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.SelectedPathChanged">
      <summary>
Ereignis, das ausgelöst wird, wenn sich der ausgewählte Pfad geändert hat.</summary>
      <remarks>
<para>Dieses Ereignis wird verwendet, um andere Steuerelemente oder Logik zu benachrichtigen, wenn der Benutzer einen anderen Knoten im TreeView auswählt. </para> <para>Es ermöglicht eine reaktive Programmierung, bei der andere Teile der Anwendung auf Änderungen im ausgewählten Pfad reagieren können.</para></remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.LineColor">
      <summary>
Gibt die Farbe der Linien zwischen den Knoten zurück oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.ShowLines">
      <summary>
Gibt an, ob Linien zwischen den Knoten angezeigt werden.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.ShowPlusMinus">
      <summary>
Legt fest ob die Plus- und Minuszeichen zum Anzeigen von Unterknoten angezeigt werden.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.ShowRootLines">
      <summary>
Gibt an, ob Linien zwischen den Stammknoten angezeigt werden.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.Indent">
      <summary>
Ruft den Abstand für das Einrücken der einzelnen Ebenen von untergeordneten Strukturknoten ab oder legt diesen fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.ItemHeight">
      <summary>
Ruft die Höhe des jeweiligen Strukturknotens im Strukturansicht-Steuerelement ab oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.BackColor">
      <summary>
Legt die Hintergrundfarbe für das Steuerelement fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.ForeColor">
      <summary>
Legt die Vordergrundfarbe für das Anzeigen von Text fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.Font">
      <summary>
Legt die Schriftart für den Text im Steuerelement fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.Text">
      <summary>
Ist für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.BackgroundImage">
      <summary>
Ist für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.BackgroundImageLayout">
      <summary>
Ist für dieses Control nicht relevant.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.#ctor">
      <summary>
Konstruktor für das ExplorerTreeView-Steuerelement.</summary>
      <remarks>
<para>Dieser Konstruktor initialisiert das Steuerelement und lädt die erforderlichen Bilder. </para> <para>Außerdem wird der Wurzelknoten des TreeViews gesetzt, um die Struktur des Steuerelements zu definieren.</para></remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.ExpandPath(System.String)">
      <summary>
Öffnet und selektiert den Knoten zum angegebenen Verzeichnispfad.</summary>
      <remarks>
Funktioniert auch bei noch nicht geladenen Unterknoten.</remarks>
      <returns>
<see langword="true" />, wenn der Knoten gefunden wurde, sonst <see langword="false" /></returns>
      <param name="Path">
Vollständiger Pfad der göffnet werden soll.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExplorerTreeViewControl.ExplorerTreeView.Dispose(System.Boolean)">
      <summary>
Gibt Ressourcen frei, die von dem ExplorerTreeView-Steuerelement verwendet werden.</summary>
      <remarks>
Diese Methode wird aufgerufen, wenn das Steuerelement explizit oder implizit entsorgt wird. Sie sorgt dafür, dass alle FileSystemWatcher-Objekte entfernt und entsorgt werden, um Speicherlecks und unerwünschte Ereignisauslösungen zu vermeiden. Zusätzlich können hier weitere verwaltete Ressourcen freigegeben werden. Nicht verwaltete Ressourcen können ebenfalls an dieser Stelle freigegeben werden.</remarks>
      <param name="disposing">
<see langword="True" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben; <see langword="False" />, um nur nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.ExplorerTreeViewControl.SelectedPathChangedEventArgs">
      <summary>
Stellt Daten für das Ereignis bereit, das ausgelöst wird, wenn sich der ausgewählte Pfad ändert.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExplorerTreeViewControl.SelectedPathChangedEventArgs.SelectedPath">
      <summary>
Ruft den aktuell ausgewählten Pfad ab.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExplorerTreeViewControl.SelectedPathChangedEventArgs.#ctor(System.String)">
      <summary>
Initialisiert eine neue Instanz der <see cref="SelectedPathChangedEventArgs" />-Klasse.</summary>
      <param name="Path">
Der neue ausgewählte Pfad.</param>
    </member>
    <member name="N:SchlumpfSoft.Controls.ExtendedRTFControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.ExtendedRTFControl.ApiDefinitions">
      <summary>
Definition der API-Funktionen</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.ExtendedRTFControl.ConstantDefinitions">
      <summary>
Definition der Konstanten</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF">
      <summary>
Erweiterte <see cref="System.Windows.Forms.RichTextBox" /> mit bequemen Formatierungs- und Abfrage-Hilfen (Schriftgröße, Stil-Flags, Farben, Einzüge, Ausrichtung) sowie Batch-Update (Redraw-Suppression).</summary>
      <remarks>
<para>Redraw-Suppression (verringerte Flackereffekte) über verschachteltes <see cref="System.Windows.Forms.RichTextBox.BeginUpdate" /> / <see cref="System.Windows.Forms.RichTextBox.EndUpdate" /> mittels <c>WM_SETREDRAW</c>.</para> <para>Mischzustände (uneinheitliche Formatierung in einer Auswahl) werden als <c>Nothing</c> (Nullable) dargestellt – soweit implementiert (z.B. Stil-Flags, Schriftgröße, Einzug).</para> <para>Vorder-/Hintergrundfarbe melden aktuell keinen Mischzustand (immer konkreter Wert).</para></remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.#ctor">
      <summary>
Erzeugt eine neue Instanz der erweiterten RichTextBox.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.ClearFormatting">
      <summary>
Entfernt Formatierungen (Schriftstil, Vorder-/Hintergrundfarbe, Bullet-Aufzählung) vollständig aus aktueller Auswahl oder – ohne Auswahl – ab der Caret-Position.</summary>
      <remarks>
Optimiert: Wendet die Normalisierung einmal auf die gesamte Auswahl an (statt per Zeichen).</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.SetSelectionAlignment(System.Windows.Forms.HorizontalAlignment)">
      <summary>
Setzt die horizontale Ausrichtung der aktuellen Absatz-/Absatzauswahl.</summary>
      <param name="alignment">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.ToggleBold">
      <summary>
Schaltet Fettdruck für aktuelle Auswahl bzw. Caret um.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.ToggleItalic">
      <summary>
Schaltet Kursiv für aktuelle Auswahl bzw. Caret um.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.ToggleUnderline">
      <summary>
Schaltet Unterstreichung für aktuelle Auswahl bzw. Caret um.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.ToggleStrikeout">
      <summary>
Schaltet Durchstreichung für aktuelle Auswahl bzw. Caret um.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.ToggleBullet">
      <summary>
Schaltet Bullet-Aufzählung für aktuelle Absatz-/Absatzauswahl um.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.SelectionFontSize">
      <summary>
Setzt die Schriftgröße der Auswahl oder Größe am Caret oder gibt diese zurück.</summary>
      <remarks>
Ein Mischzustand ergibt Nothing.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.SelectionBold">
      <summary>
Setzt den Bold-Zustand der Auswahl oder am Caret oder gibt diesen zurück.</summary>
      <remarks>
Ein Mischzustand ergibt Nothing.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.SelectionItalic">
      <summary>
Setzt den Kursiv-Zustand der Auswahl oder am Caret oder gibt diesen zurück.</summary>
      <remarks>
Ein Mischzustand ergibt Nothing.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.SelectionUnderline">
      <summary>
Setzt die Unterstreichung der Auswahl oder am Caret oder gibt diesen zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.SelectionStrikeout">
      <summary>
Setzt die Durchstreichung der Auswahl oder am Caret oder gibt diesen zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.SelectionForeColor">
      <summary>
Setzt die aktuelle Vordergrundfarbe (Textfarbe) der Auswahl oder am Caret oder gibt diese zurück.</summary>
      <remarks>
<para>Meldet keinen Mischzustand (immer konkreter Wert). </para> <para>Für echte Mischzustandserkennung wäre eine per-Zeichen-Prüfung analog zu den Stil-Flags nötig.</para></remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.SelectionBackColor">
      <summary>
Setzt die aktuelle Hintergrund-/Highlightfarbe der Auswahl oder am Caret oder gibt diese zurück.</summary>
      <remarks>
<para>Meldet keinen Mischzustand (immer konkreter Wert).</para> <para>Für echte Mischzustandserkennung wäre eine per-Zeichen-Prüfung analog zu den Stil-Flags nötig.</para></remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.SelectionLeftIndent">
      <summary>
Setzt den Absatz-Einzug (Pixel) der Auswahl oder am Caret oder gibt diesen zurück.</summary>
      <remarks>
<para>Ein Mischzustand ergibt Nothing.</para> <para>Der Einzug wird immer für den gesamten Absatz gesetzt (SelectionLength wird intern ignoriert).</para></remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.OnSelectionChanged(System.EventArgs)">
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.ExtendedRTFControl.ExtendedRTF.Dispose(System.Boolean)">
      <param name="disposing">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.ExtendedRTFControl.FieldDefinitions">
      <summary>
Definition der Variablen</summary>
    </member>
    <member name="N:SchlumpfSoft.Controls.FileSearchControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.FileSearchControl.FieldDefinitions">
      <summary>
Definiert die Variablen</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.FileSearchControl.FileSearch">
      <summary>
Führt eine (optionale rekursive) asynchrone Dateisuche anhand eines Suchmusters aus und meldet Ergebnisse sowie Fortschritt über Ereignisse.</summary>
      <remarks>
<para>Die Suche läuft in einem ThreadPool-Thread (via <see cref="Task.Run(System.Action)" />). </para> <para>Events werden (über <see cref="SimpleProgress(Of T)" />) typischerweise auf dem Ersteller- Synchronisierungskontext (z. B. UI-Thread) aufgerufen, sofern beim Start vorhanden. </para> <para>Ein erneuter Aufruf von <see cref="StartSearch" /> beendet eine laufende Suche vor Start der neuen. </para> <para>Es erfolgt eine doppelte Enumeration (Zählen + Iterieren), was bei sehr vielen Dateien Performance kosten kann.</para></remarks>
    </member>
    <member name="E:SchlumpfSoft.Controls.FileSearchControl.FileSearch.FileFound">
      <summary>
Wird für jede gefundene Datei ausgelöst.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.FileSearchControl.FileSearch.SearchCompleted">
      <summary>
Wird nach Abschluss oder Abbruch der Suche ausgelöst.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.FileSearchControl.FileSearch.ErrorOccurred">
      <summary>
Meldet aufgetretene Fehler (z. B. fehlende Zugriffsrechte, ungültiger Pfad).</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.FileSearchControl.FileSearch.ProgressChanged">
      <summary>
Meldet aggregierte Fortschrittsinformationen (Anzahl gefunden, Gesamtzahl, Prozent).</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.FileSearchControl.FileSearch.StartPath">
      <summary>
Startverzeichnis der Suche (Initialwert ist String.Empty).</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.FileSearchControl.FileSearch.SearchPattern">
      <summary>
Suchmuster (z. B. *.txt). (Standardwert ist "*.*").</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.FileSearchControl.FileSearch.SearchInSubfolders">
      <summary>
Gibt an, ob die Suche rekursiv in Unterordnern erfolgen soll. (Standardwert ist False).</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.FileSearchControl.FileSearch.#ctor">
    </member>
    <member name="M:SchlumpfSoft.Controls.FileSearchControl.FileSearch.StartSearchAsync">
      <summary>
Initialisiert eine neue Instanz der <see cref="FileSearch" /> Klasse.</summary>
      <remarks>
<para>Bei erneutem Aufruf während eine Suche läuft, wird die vorherige zuerst abgebrochen. </para></remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.FileSearchControl.FileSearch.StopSearch">
      <summary>
Bricht eine eventuell laufende Suche ab.</summary>
      <remarks>
Der Abbruch ist kooperativ; bereits ausgelöste Events (FileFound/Progress) können noch kurzfristig eintreffen.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.FileSearchControl.FileSearch.#ctor(System.ComponentModel.IContainer)">
      <param name="container">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.FileSearchControl.FileSearch.Dispose(System.Boolean)">
      <param name="disposing">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.FileSearchControl.FileSearchEventArgs">
      <summary>
Stellt Fortschrittsinformationen für den Datei-Suchvorgang bereit und wird beim <c>ProgressChanged</c>-Ereignis der Dateisuche übergeben.</summary>
      <remarks>
Die Werte werden bei jeder gefundenen Datei aktualisiert. Es wird kein Thread-Sicherheits- garantiert; Konsumenten sollten nur lesend zugreifen.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.FileSearchControl.FileSearchEventArgs.Percent">
      <summary>
<para>Prozentualer Fortschritt (0–100). </para> <para>Wird aus <see cref="Found" /> und <see cref="Total" /> berechnet. </para> <para>Ist 0, wenn keine Dateien gezählt wurden oder die Berechnung noch nicht erfolgt ist.</para></summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.FileSearchControl.FileSearchEventArgs.Found">
      <summary>
Anzahl der bislang gefundenen (und gemeldeten) Dateien.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.FileSearchControl.FileSearchEventArgs.Total">
      <summary>
<para>Gesamtanzahl der zu erwartenden Dateien gemäß aktueller Zählung. </para> <para>Kann 0 sein, wenn kein Treffer vorliegt oder die Gesamtmenge nicht ermittelt werden konnte.</para></summary>
    </member>
    <member name="N:SchlumpfSoft.Controls.IniFileControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.AddItemDialog">
      <summary>
Dialogfenster zum Erfassen eines neuen Wertes (z. B. für einen neuen INI-Item). Der Dialog aktiviert den OK-Button nur bei nicht-leerer Eingabe und gibt den eingegebenen Text über die Eigenschaft <see cref="NewItemValue" /> zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.AddItemDialog.NewItemValue">
      <summary>
Gibt den neuen Wert zurück oder legt ihn fest.</summary>
      <remarks>
Der Wert wird normalerweise nicht direkt gesetzt, sondern beim Bestätigen (OK) aus dem Textfeld übernommen. Ein externer Set ist möglich, z. B. um einen Startwert anzuzeigen.</remarks>
      <value>
Der neu eingegebene und über OK bestätigte Text.</value>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.AddItemDialog.#ctor">
      <summary>
Erstellt den Dialog und initialisiert Steuerelemente.</summary>
      <remarks>
Die Steuerelemente (z. B. <c>ButtonOK</c>, <c>ButtonCancel</c>, <c>TextBox</c>) werden im Designer angelegt. Hier wird u. a. der OK-Button deaktiviert, bis eine gültige Eingabe vorliegt.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.AddItemDialog.Dispose(System.Boolean)">
      <param name="disposing">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.CommentEdit">
      <summary>
Steuerelement zum Anzeigen und Bearbeiten des Datei- oder Abschnittskommentars einer INI-Datei.</summary>
      <remarks>
- Setzen Sie <see cref="Comment" /> um den anzuzeigenden Kommentar zu initialisieren. - Ändern des Textes in der Textbox aktiviert den Übernehmen-Button. - Ein Klick auf den Button übernimmt die Änderungen in <see cref="Comment" /> und löst <see cref="CommentChanged" /> aus.</remarks>
    </member>
    <member name="E:SchlumpfSoft.Controls.IniFileControl.CommentEdit.CommentChanged">
      <summary>
Wird ausgelöst, wenn sich der Kommentartext geändert hat und per Button übernommen wurde.</summary>
      <remarks>
Dieses Ereignis folgt dem Muster: Änderungen werden erst nach Klick auf den Übernehmen-Button propagiert, nicht bei jeder Texteingabe. So bleiben UI-Eingaben atomar.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.CommentEdit.#ctor">
      <summary>
Initialisiert eine neue Instanz von <see cref="CommentEdit" />.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.CommentEdit.TitelText">
      <summary>
Gibt den Text der Titelzeile (GroupBox) zurück oder legt diesen fest.</summary>
      <remarks>
Das Setzen löst intern <see cref="TitelTextChanged" /> aus, wodurch der UI-Text aktualisiert wird.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.CommentEdit.Comment">
      <summary>
Gibt die Kommentarzeilen zurück oder legt diese fest.</summary>
      <remarks>
- Jede Array-Position entspricht einer Zeile in der Textbox. - Änderungserkennung erfolgt per <see cref="Enumerable.SequenceEqual(Of TSource)" />. - Das Setzen löst intern <see cref="PropCommentChanged" /> aus, wodurch die Textbox synchronisiert wird.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.CommentEdit.SectionName">
      <summary>
Gibt den Namen des INI-Abschnitts zurück oder legt diesen fest, für den der Kommentar angezeigt wird.</summary>
      <remarks>
Dieser Name wird zusammen mit den Kommentarzeilen im Ereignis <see cref="CommentChanged" /> übermittelt.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.CommentEdit.Dispose(System.Boolean)">
      <param name="disposing">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.CommentEditEventArgs">
      <summary>
Repräsentiert die Ereignisdaten für das Bearbeiten von Kommentartexten in einer INI-Datei.</summary>
      <remarks>
<para> Der Kommentar wird als Array von Zeilen (<see cref="String" />) gespeichert. Dies erlaubt eine genaue Trennung und spätere Ausgabe, ohne Zeilenumbrüche neu zusammensetzen zu müssen. </para> <para> Beachten Sie, dass das übergebene Array als Referenz gespeichert wird. Wenn Unveränderlichkeit gewünscht ist, übergeben Sie eine Kopie (z. B. mittels <c>Comment.ToArray()</c>) oder erstellen Sie innerhalb des Aufrufers eine neue Arrayinstanz. </para></remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.CommentEditEventArgs.Comment">
      <summary>
Speichert den neuen Kommentartext als Array von Zeilen.</summary>
      <remarks>
Diese Eigenschaft hält eine Referenz auf das Array. Externe Änderungen am Array werden somit in dieser Instanz sichtbar. Wenn das unerwünscht ist, verwenden Sie eine Kopie.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.CommentEditEventArgs.Section">
      <summary>
Speichert den Namen des aktuellen Abschnitts.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.CommentEditEventArgs.#ctor(System.String,System.String[])">
      <summary>
Initialisiert eine neue Instanz der Klasse <see cref="CommentEditEventArgs" />.</summary>
      <remarks>
Aus Leistungsgründen wird das übergebene <paramref name="Comment" />-Array als Referenz übernommen. Erstellen Sie bei Bedarf vor dem Aufruf eine Kopie.</remarks>
      <param name="Section">
Der Name des Abschnitts (ohne eckige Klammern). Kann Nothing/Leer sein.</param>
      <param name="Comment">
Der neue Kommentartext als Zeilenarray. Sollte nicht Nothing sein.</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.ContentView">
      <summary>
Steuerelement zum Anzeigen des Dateiinhalts (z. B. einer INI-Datei) in einer TextBox innerhalb einer GroupBox.</summary>
      <remarks>
- Das Control stellt zwei öffentliche Eigenschaften bereit: - <see cref="TitelText" /> für den Text der GroupBox (Titelzeile). - <see cref="Lines" /> für den darzustellenden Textinhalt als String-Array. - Änderungen an diesen Eigenschaften lösen interne Events aus, die über Handler die UI aktualisieren. - Das konkrete Layout (z. B. Instanzen von <c>GroupBox</c> und <c>TextBox</c>) wird im Designer erzeugt und in <c>InitializeComponent()</c> initialisiert.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.ContentView.#ctor">
      <summary>
Initialisiert eine neue Instanz des Controls und stellt Designer-Komponenten bereit.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.ContentView.TitelText">
      <summary>
Gibt den Text der Titelzeile (GroupBox) zurück oder legt diesen fest.</summary>
      <remarks>
- Das Setzen löst das interne Event <c>TitelTextChanged</c> aus, welches die UI aktualisiert. - Die Property ist im Designer sichtbar und unter "Appearance" kategorisiert.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.ContentView.Lines">
      <summary>
Gibt den Dateiinhalt als Array von Zeilen zurück oder legt diesen fest.</summary>
      <remarks>
- Das Setzen löst das interne Event <c>PropLinesChanged</c> aus, welches die UI aktualisiert. - Der Vergleich <c>IsNot</c> prüft hier Referenzungleichheit des Arrays. Wird derselbe Array-Instanzinhalt verändert, ohne das Array-Objekt zu tauschen, wird kein Event ausgelöst.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.ContentView.Dispose(System.Boolean)">
      <param name="disposing">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.DeleteItemDialog">
      <summary>
Dialog zur Bestätigung des Löschens eines Elements.</summary>
      <remarks>
Beispielnutzung: Dim dlg As New DeleteItemDialog() dlg.ItemValue = "MeinEintrag" If dlg.ShowDialog() = DialogResult.OK Then ' Löschvorgang ausführen End If</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.DeleteItemDialog.ItemValue">
      <summary>
Gibt den Wert des Elements zurück oder legt ihn fest. Beim Setzen wird ein Ereignis ausgelöst, um abhängige UI-Elemente zu aktualisieren.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.DeleteItemDialog.Dispose(System.Boolean)">
      <param name="disposing">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.EntryValueEdit">
      <remarks>
Hinweise zum Aufbau: - Dieses UserControl setzt voraus, dass im Designer-Teil (Partial-Klasse) mindestens folgende Steuerelemente vorhanden sind: GroupBox (als Titelrahmen), TextBox (zur Eingabe des Wertes) und Button (zum Bestätigen/Übernehmen). - Das Steuerelement kapselt den aktuellen Kontext (Abschnitt + Eintrag) sowie den zugehörigen Wert. - Änderungen am TextBox-Inhalt aktivieren den Button. Ein Klick auf den Button bestätigt die Änderung und löst ein Ereignis aus.</remarks>
    </member>
    <member name="E:SchlumpfSoft.Controls.IniFileControl.EntryValueEdit.ValueChanged">
      <summary>
Wird ausgelöst, wenn sich der Wert geändert hat und der Benutzer die Änderung bestätigt hat. Typisches Einsatzszenario: Persistieren in die zugrunde liegende INI-Datei außerhalb des Controls.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.EntryValueEdit.#ctor">
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.EntryValueEdit.TitelText">
      <summary>
Gibt den Text der Titelzeile zurück oder legt diesen fest. Das Setzen dieser Eigenschaft aktualisiert die UI (GroupBox.Text) über das interne Ereignis.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.EntryValueEdit.SelectedSection">
      <summary>
Gibt den aktuell ausgewählten Abschnitt (INI-Sektion) zurück oder legt diesen fest. Diese Information wird zusammen mit dem Eintragsnamen im ValueChanged-Ereignis mitgegeben.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.EntryValueEdit.SelectedEntry">
      <summary>
Gibt den aktuell ausgewählten Eintrag innerhalb der Sektion zurück oder legt diesen fest. Diese Information wird gemeinsam mit dem Abschnitt im ValueChanged-Ereignis übergeben.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.EntryValueEdit.Value">
      <summary>
Gibt den Eintragswert zurück oder legt diesen fest. Beim Setzen wird die TextBox über das interne Ereignis synchronisiert und der Übernehmen-Button deaktiviert. Hinweis: Das ändert NICHT automatisch die INI-Datei; Persistenz erfolgt über das ValueChanged-Ereignis.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.EntryValueEdit.Dispose(System.Boolean)">
      <param name="disposing">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.EntryValueEditEventArgs">
      <summary>
Transportiert Kontextinformationen, wenn der Wert eines INI-Eintrags editiert wurde.</summary>
      <remarks>
Typisches Einsatzszenario: Wird als <see cref="EventArgs" /> bei einem Ereignis (z. B. "EntryValueEdited") verwendet, um die betroffene Sektion, den Eintragsnamen und den neuen Wert an die Event-Handler zu übergeben.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.EntryValueEditEventArgs.SelectedSection">
      <summary>
Gibt die aktuell ausgewählte Sektion an, in der der Eintrag liegt.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.EntryValueEditEventArgs.SelectedEntry">
      <summary>
Gibt den Namen des ausgewählten Eintrags innerhalb der Sektion an.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.EntryValueEditEventArgs.NewValue">
      <summary>
Enthält den neuen Wert, der für den Eintrag gesetzt wurde.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.EntryValueEditEventArgs.#ctor(System.String,System.String,System.String)">
      <summary>
Erstellt eine neue Instanz und initialisiert alle kontextrelevanten Informationen.</summary>
      <param name="SelectedSection">
Name der INI-Sektion.</param>
      <param name="SelectedEntry">
Eintragsname innerhalb der Sektion.</param>
      <param name="NewValue">
Neuer Wert des Eintrags.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.EntryValueEditEventArgs.Finalize">
      <summary>
Finalizer. Ruft lediglich die Basisimplementierung auf.</summary>
      <remarks>
In .NET wird ein Finalizer nur selten benötigt. Da hier keine unmanaged Ressourcen verwaltet werden, kann diese Überschreibung i. d. R. entfallen.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.EntryValueEditEventArgs.ToString">
      <summary>
Gibt eine Zeichenfolgendarstellung der Instanz zurück.</summary>
      <remarks>
Für eine aussagekräftigere Ausgabe könnte diese Methode überschrieben werden, z. B.: $"[{SelectedSection}] {SelectedEntry} = {NewValue}"</remarks>
      <returns>
Standarddarstellung der Basisklasse.</returns>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.EntryValueEditEventArgs.Equals(System.Object)">
      <summary>
Prüft die Gleichheit mit einem anderen Objekt.</summary>
      <remarks>
Für semantische Gleichheit dieser EventArgs könnten Sie hier einen Vergleich der Properties (Sektion, Eintrag, Wert) implementieren.</remarks>
      <returns>
True, wenn die Basisklasse Gleichheit bestimmt; andernfalls False.</returns>
      <param name="obj">
Vergleichsobjekt.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.EntryValueEditEventArgs.GetHashCode">
      <summary>
Liefert den Hashcode der Instanz.</summary>
      <remarks>
Falls <see cref="Equals(Object)" /> semantisch überschrieben wird, sollte hier ein konsistenter Hashcode aus den Properties gebildet werden.</remarks>
      <returns>
Hashcode der Basisklasse.</returns>
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.IniFile">
      <summary>
' Steuerelement zum Verwalten von INI - Dateien '</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.IniFileControl.IniFile.FileContentChanged">
      <summary>
Wird ausgelöst wenn sich der Dateiinhalt geändert hat.</summary>
      <remarks>
Dieses Ereignis wird nach jeder Änderung an der internen Struktur (Add/Rename/Delete/Set) ausgelöst, unabhängig davon, ob AutoSave aktiv ist.</remarks>
    </member>
    <member name="E:SchlumpfSoft.Controls.IniFileControl.IniFile.SectionNameExist">
      <summary>
Wird ausgelöst wenn beim anlegen eines neuen Abschnitts oder umbnennen eines Abschnitts der Name bereits vorhanden ist.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.IniFileControl.IniFile.EntryNameExist">
      <summary>
Wird ausgelöst wenn beim anlegen eines neuen Eintrags oder umbenennen eines Eintrags der Name bereitsvorhanden ist.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.IniFile.FileSaved">
      <summary>
Zeigt an ob die Datei gespeichert wurde</summary>
      <remarks>
True bedeutet, dass der aktuelle Zustand auf Datenträger geschrieben wurde (entweder durch expliziten Aufruf von SaveFile oder automatisch, wenn AutoSave=True).</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.IniFile.CommentPrefix">
      <remarks>
Wird beim Erzeugen/Analysieren der Datei verwendet. Änderungen wirken sich auf die Ausgabe in CreateFileContent aus. Beim Parsen wird das jeweils aktuell gesetzte Prefix zur Erkennung von Kommentarzeilen herangezogen.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.IniFile.FileName">
      <summary>
Gibt den aktuellen Dateiname zurück oder legt diesen fest</summary>
      <remarks>
Der Name wird beim Speichern/Laden mit dem Pfad kombiniert.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.IniFile.FilePath">
      <summary>
Gibt den Pfad zur INI-Datei zurück oder legt diesen fest.</summary>
      <remarks>
Beim Speichern/Laden wird der Pfad mit dem Dateinamen kombiniert.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.IniFile.AutoSave">
      <summary>
Legt das Speicherverhalten der Klasse fest.</summary>
      <remarks>
True legt fest das Änderungen automatisch gespeichert werden. Bei False bleibt der Status unsaved, bis SaveFile explizit aufgerufen wird.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.CreateNewFile">
      <summary>
Erzeugt eine neue Datei mit Beispielinhalt und Standard-Kommentarprefix</summary>
      <remarks>
Diese Methode ruft <seealso cref="CreateNewFile(Char)" /> mit "Nothing" auf.</remarks>
      <seealso cref="M:SchlumpfSoft.Controls.IniFileControl.IniFile.CreateNewFile(System.Char)">
CreateNewFile</seealso>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.CreateNewFile(System.Char)">
      <summary>
Erzeugt eine neue Datei mit Beispielinhalt</summary>
      <remarks>
Wenn kein Prefixzeichen angegeben wird, wird Standardmäßig das Semikolon verwendet. Diese Methode erstellt eine Beispielstruktur mit den Abschnitten [Allgemein], [Datenbank], [Logging].</remarks>
      <param name="CommentPrefix">
Prefixzeichen für Kommentare oder "Nothing".</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.LoadFile(System.String)">
      <summary>
Lädt die angegebene Datei</summary>
      <remarks>
Diese Überladung setzt Pfad und Dateiname und ruft anschließend LoadFile() ohne Parameter auf.</remarks>
      <param name="FilePathAndName">
Name und Pfad der Datei die geladen werden soll.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.LoadFile">
      <summary>
Lädt die Datei die in <see cref="FilePath" /> angegeben wurde.</summary>
      <remarks>
Liest alle Zeilen, parst sie in die internen Strukturen, markiert den Zustand als gespeichert und löst das FileContentChanged-Ereignis aus.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.SaveFile(System.String)">
      <summary>
Speichert die angegebene Datei.</summary>
      <remarks>
Setzt Pfad und Dateiname und ruft SaveFile() ohne Parameter auf.</remarks>
      <param name="FilePathAndName">
Name und Pfad der Datei die gespeichert werden soll.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.GetFileContent">
      <summary>
Gibt den Dateiinhalt zurück</summary>
      <remarks>
Dies ist der aktuelle, generierte Rohinhalt (Zeilen), so wie er gespeichert werden würde.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.GetFileComment">
      <summary>
Gibt den Dateikommentar zurück</summary>
      <remarks>
Die Kommentarzeilen werden ohne Prefixzeichen zurückgegeben. Beim Erzeugen des Datei-Inhalts wird das Prefix automatisch vorangestellt.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.SetFileComment(System.String[])">
      <summary>
Setzt den Dateikommentar.</summary>
      <remarks>
Die übergebenen Zeilen sollten keine Prefixzeichen enthalten. Nach dem Setzen wird der Dateiinhalt neu aufgebaut (und ggf. gespeichert, wenn AutoSave=True).</remarks>
      <param name="CommentLines">
Die Zeilen des Dateikommentars.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.GetSectionNames">
      <summary>
Ruft die Abschnittsnamen ab.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.GetEntryNames(System.String)">
      <summary>
Gibt die Namen der Einträge eines Abschnitts zurück</summary>
      <returns>
Eintragsliste oder Nothing falls <paramref name="SectionName" /> nicht existiert.</returns>
      <param name="SectionName">
Abschnittsname</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.AddSection(System.String)">
      <summary>
Fügt einen neuen Abschnitt hinzu.</summary>
      <remarks>
Löst SectionNameExist aus und bricht ab, wenn der Abschnitt bereits existiert.</remarks>
      <param name="Name">
Name des neuen Abschnitts</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.AddEntry(System.String,System.String)">
      <summary>
Fügt einen neuen Eintrag in die Liste der Eintragsnamen ein.</summary>
      <remarks>
Der Abschnitt muss existieren, andernfalls kommt es zu einer Ausnahme. Bei Namenskonflikt wird EntryNameExist ausgelöst und abgebrochen.</remarks>
      <param name="Section">
Abschnitt in den der Eintrag eingefügt werden soll.</param>
      <param name="Name">
Name des Eintrags.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.RenameSection(System.String,System.String)">
      <summary>
Benennt einen Abschnitt um.</summary>
      <remarks>
Es werden sowohl der Abschnitt (Werte) als auch sein Kommentar umgehängt. Bei Namenskonflikt wird SectionNameExist ausgelöst.</remarks>
      <param name="OldName">
alter Name des Abschnitts</param>
      <param name="NewName">
neuer name des Abschnitts</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.RenameEntry(System.String,System.String,System.String)">
      <summary>
Benennt einen Eintrag in einem Abschnitt um.</summary>
      <remarks>
Der Abschnitt muss existieren. Bei Namenskonflikt wird EntryNameExist ausgelöst.</remarks>
      <param name="Section">
Abschnitt der den Eintrag enthält.</param>
      <param name="Oldname">
</param>
      <param name="NewName">
Neuer Name des Eintrags.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.DeleteSection(System.String)">
      <summary>
Löscht einen Abschnitt</summary>
      <remarks>
Entfernt auch den dazugehörigen Abschnittskommentar.</remarks>
      <param name="Name">
Name des Abschnittes</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.DeleteEntry(System.String,System.String)">
      <summary>
Löscht einen Eintrag aus einem Abschnitt.</summary>
      <param name="Section">
Abschnitt aus dem der Eintrag gelöscht werden soll.</param>
      <param name="Entry">
Eintrag der gelöscht werden soll.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.GetSectionComment(System.String)">
      <summary>
Gibt die Kommentarzeilen für einen Abschnitt zurück</summary>
      <returns>
Kommentar für <paramref name="SectionName" /> oder Nothing wenn kein Kommentar existiert.</returns>
      <param name="SectionName">
Name des Abschnitts</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.GetEntryValue(System.String,System.String)">
      <summary>
Gibt den Wert eines Eintrags aus einem Abschnitt zurück</summary>
      <remarks>
Erwartet, dass Abschnitt und Eintrag existieren. Andernfalls kann eine Ausnahme geworfen werden. Bei leerem Abschnitts- und Eintragsnamen wird ein leerer String zurückgegeben.</remarks>
      <returns>
Wert des Eintrags.</returns>
      <param name="Section">
Abschnitt aus dem der Wert des Eintrags gelesen werden soll.</param>
      <param name="Entry">
Eintrag dessen Wert gelesen werden soll.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.SetSectionComment(System.String,System.String[])">
      <summary>
Setzt den Kommentar für einen Abschnitt.</summary>
      <remarks>
Die übergebenen Zeilen sollten ohne Prefixzeichen sein.</remarks>
      <param name="Name">
Name des Abschnitts.</param>
      <param name="CommentLines">
Kommentarzeilen</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.IniFile.SetEntryValue(System.String,System.String,System.String)">
      <summary>
Setzt den Wert eines Eintrags in einem Abschnitt.</summary>
      <remarks>
Der Abschnitt und der Eintrag müssen existieren.</remarks>
      <param name="Section">
Abschnitt in dem der Wert eines Eintrags geändert werden soll.</param>
      <param name="Entry">
Eintrag dessen Wert geändert werden soll.</param>
      <param name="Value">
Der geänderte Wert.</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.ListEdit">
      <summary>
Steuerelement zum Anzeigen und Bearbeiten der Abschnitts- oder Eintrags-Liste einer INI-Datei.</summary>
      <remarks>
<para><b>Darstellung:</b> </para> <list type="bullet"><item><description>Eine `GroupBox` mit Titel (Eigenschaft `TitelText`). </description></item><item><description>Eine `ListBox` mit Einträgen (Eigenschaft `ListItems`). </description></item><item><description>Drei Buttons: Hinzufügen, Umbenennen, Löschen. Interaktion: </description></item><item><description>Auswahländerung in der ListBox löst `SelectedItemChanged` aus. </description></item><item><description>Button-Klicks lösen semantische Ereignisse aus (`ItemAdd`, `ItemRename`, `ItemRemove`), die vom Host verarbeitet werden. </description></item></list> <para><b>Zustandsführung:</b> </para> <list type="bullet"><item><description>`_SelectedSection`: Der aktuell betroffene INI-Abschnitt (vom Host gesetzt). </description></item><item><description>`_SelectedItem`: Der aktuell gewählte Eintrag der `ListBox`. </description></item><item><description>`_Items`: Datenquelle für die `ListBox`.</description></item></list> <para><b>Design-Time:</b> </para> <list type="bullet"><item><description>Mit Toolbox-Attributen versehen, damit es in der VS-Toolbox erscheint.</description></item></list></remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.ListEdit.#ctor">
    </member>
    <member name="E:SchlumpfSoft.Controls.IniFileControl.ListEdit.ItemAdd">
      <summary>
Wird ausgelöst, wenn über den UI-Button ein neuer Eintrag hinzugefügt werden soll. Der Host soll im Handler den Eintrag tatsächlich anlegen und die ListItems ggf. neu setzen.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.IniFileControl.ListEdit.ItemRename">
      <summary>
Wird ausgelöst, wenn ein Eintrag umbenannt werden soll. Alte und neue Werte sind in den EventArgs enthalten.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.IniFileControl.ListEdit.ItemRemove">
      <summary>
Wird ausgelöst, wenn ein Eintrag gelöscht werden soll.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.IniFileControl.ListEdit.SelectedItemChanged">
      <summary>
Wird ausgelöst, wenn sich der gewählte Eintrag geändert hat (Auswahl in der ListBox).</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.ListEdit.TitelText">
      <summary>
Gibt den Text der Titelzeile zurück oder legt diesen fest. Beim Setzen wird das interne Ereignis `TitelTextChanged` ausgelöst, welches das UI aktualisiert.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.ListEdit.ListItems">
      <summary>
Setzt die Elemente der ListBox oder gibt diese zurück. Hinweis: Der Vergleich nutzt Referenzungleichheit (IsNot). Das Array wird als Ganzes ersetzt. Das interne Ereignis `ListItemsChanged` triggert anschließend das Befüllen der ListBox.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.ListEdit.SelectedSection">
      <summary>
Gibt den aktuell ausgewählten Abschnitt zurück oder legt diesen fest. Wird typischerweise vom Host beim Wechsel der INI-Sektion gesetzt, damit Events den Kontext kennen.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.ListEdit.Dispose(System.Boolean)">
      <param name="disposing">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.ListEditEventArgs">
      <summary>
Trägersklasse für Ereignisdaten beim Bearbeiten einer Eintragsliste (z. B. Umbenennen, Hinzufügen, Löschen) innerhalb einer INI-Abschnittsstruktur.</summary>
      <remarks>
Diese Klasse wird typischerweise als <see cref="EventArgs" />-Ableitung in Ereignissen verwendet, die eine Listeneintrag-Operation beschreiben. Bedeutungen der Felder/Eigenschaften: - <see cref="SelectedSection" />: Der Name des INI-Abschnitts (Section), in dem die Operation stattfindet. - <see cref="SelectedItem" />: Der aktuell ausgewählte/zu bearbeitende Eintrag (z. B. alter Name beim Umbenennen). - <see cref="NewItemName" />: Der neue Name für den Eintrag (z. B. Zielname beim Umbenennen oder Name beim Hinzufügen). Hinweise: - Für Löschvorgänge kann <see cref="NewItemName" /> leer bleiben. - Für Hinzufüge-Operationen kann <see cref="SelectedItem" /> leer sein, während <see cref="NewItemName" /> den neuen Namen enthält. - Strings werden standardmäßig auf <see cref="String.Empty" /> initialisiert, können jedoch auch <c>Nothing</c> sein, wenn dies im aufrufenden Code so gesetzt wird.</remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.ListEditEventArgs.#ctor(System.String,System.String,System.String)">
      <summary>
Erstellt eine neue Instanz mit den relevanten Angaben zur Listenbearbeitung.</summary>
      <param name="SelectedSection">
Der INI-Abschnitt, in dem die Operation stattfindet.</param>
      <param name="SelectedItem">
Der aktuell ausgewählte/alte Eintragsname (kann leer sein, z. B. beim Hinzufügen).</param>
      <param name="NewItemName">
Der neue Eintragsname (kann leer sein, z. B. beim Löschen).</param>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.ListEditEventArgs.SelectedSection">
      <summary>
Name des INI-Abschnitts, in dem die Listenoperation erfolgt.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.ListEditEventArgs.SelectedItem">
      <summary>
Der aktuell ausgewählte/alte Eintrag, auf den sich die Operation bezieht.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.IniFileControl.ListEditEventArgs.NewItemName">
      <summary>
Zielname bzw. neuer Eintragsname.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.ListEditEventArgs.Finalize">
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.ListEditEventArgs.ToString">
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.ListEditEventArgs.Equals(System.Object)">
      <param name="obj">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.ListEditEventArgs.GetHashCode">
    </member>
    <member name="T:SchlumpfSoft.Controls.IniFileControl.RenameItemDialog">
    </member>
    <member name="M:SchlumpfSoft.Controls.IniFileControl.RenameItemDialog.Dispose(System.Boolean)">
      <param name="disposing">
</param>
    </member>
    <member name="N:SchlumpfSoft.Controls.NotifyFormControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.NotifyFormControl.NotifyForm">
      <summary>
Control zum anzeigen von Benachrichtigungsfenstern.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.NotifyFormControl.NotifyForm.Design">
      <summary>
Legt das Aussehen des Benachrichtigungsfensters fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.NotifyFormControl.NotifyForm.Message">
      <summary>
Legt den Benachrichtigungstext fest der angezeigt werden soll.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.NotifyFormControl.NotifyForm.ShowTime">
      <summary>
Legt die Anzeigedauer des Benachrichtigungsfensters in ms fest.</summary>
      <remarks>
Der Wert 0 bewirkt das kein automatisches schließen des Fensters erfolgt.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.NotifyFormControl.NotifyForm.Style">
      <summary>
Legt das anzuzeigende Symbol im Benachrichtigungsfensters fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.NotifyFormControl.NotifyForm.Title">
      <summary>
Legt den Text der Titelzeile des Benachrichtigungsfensters fest.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.NotifyFormControl.NotifyForm.#ctor">
    </member>
    <member name="M:SchlumpfSoft.Controls.NotifyFormControl.NotifyForm.Show">
      <summary>
Zeigt das Meldungsfenster an.</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.NotifyFormControl.NotifyFormDesign">
      <summary>
Auflistung der Designs</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.NotifyFormControl.NotifyFormDesign.Bright">
      <summary>
Helles Design</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.NotifyFormControl.NotifyFormDesign.Colorful">
      <summary>
Farbiges Design</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.NotifyFormControl.NotifyFormDesign.Dark">
      <summary>
Dunkles Design</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.NotifyFormControl.NotifyFormStyle">
      <summary>
Auflistung der Styles</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.NotifyFormControl.NotifyFormStyle.Information">
      <summary>
Infosymbol</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.NotifyFormControl.NotifyFormStyle.Question">
      <summary>
Fragesymbol</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.NotifyFormControl.NotifyFormStyle.CriticalError">
      <summary>
Fehlersymbol</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.NotifyFormControl.NotifyFormStyle.Exclamation">
      <summary>
Warnungssymbol</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.ProvideToolboxControlAttribute">
      <summary>
Dieses Attribut fügt für die Assembly einen ToolboxControlsInstaller-Schlüssel hinzu, um Steuerelemente aus der Assembly in die Toolbox zu installieren.</summary>
      <remarks>
<para /> <para /></remarks>
    </member>
    <member name="M:SchlumpfSoft.Controls.ProvideToolboxControlAttribute.#ctor(System.String,System.Boolean)">
      <summary>
Erstellt ein neues ProvideToolboxControl-Attribut, um die Assembly für den Toolbox Controls Installer zu registrieren.</summary>
      <param name="name">
Anzeigename der Steuerelementgruppe.</param>
      <param name="isWpfControls">
True, wenn es sich um WPF-Steuerelemente handelt; andernfalls False.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.ProvideToolboxControlAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>
<para>Registriert dieses Attribut mit dem angegebenen Kontext.</para> <para>Der Kontext enthält den Speicherort, an dem die Registrierungsinformationen abgelegt werden sollen.</para> <para>Er enthält außerdem Informationen wie den zu registrierenden Typ und Pfadinformationen.</para></summary>
      <param name="context">
Der Kontext, in dem registriert werden soll.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.ProvideToolboxControlAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
      <summary>
Hebt die Registrierung dieses Attributs mit dem angegebenen Kontext auf.</summary>
      <param name="context">
<para>Ein von einem externen Registrierungstool bereitgestellter Registrierungskontext.</para> <para>Der Kontext kann verwendet werden, um Registrierungsschlüssel zu entfernen, die Registrierungsaktivität zu protokollieren und Informationen über die zu registrierende Komponente abzurufen.</para></param>
    </member>
    <member name="T:SchlumpfSoft.Controls.SchlumpfSoftControls2Package">
      <summary>
Dies ist die Klasse, die das von dieser Assembly bereitgestellte Paket implementiert.</summary>
      <remarks>
<para> Die Mindestanforderung, damit eine Klasse als gültiges Paket für Visual Studio gilt, besteht darin, das IVsPackage-Interface zu implementieren und sich bei der Shell zu registrieren. </para> <para>Dieses Paket verwendet die in der Managed Package Framework (MPF) definierten Hilfsklassen, um dies zu erreichen: </para> <para>Es leitet sich von der Klasse Package ab, die die Implementierung der IVsPackage-Schnittstelle bereitstellt, und verwendet die im Framework definierten Registrierungsattribute, um sich selbst und seine Komponenten bei der Shell zu registrieren. </para> <para>Diese Attribute teilen dem Pkgdef-Erstellungstool mit, welche Daten in die .pkgdef-Datei geschrieben werden sollen. </para> <para> Damit das Paket in VS geladen wird, muss in der .vsixmanifest-Datei mit &lt;Asset Type="Microsoft.VisualStudio.VsPackage" ...&gt; darauf verwiesen werden. </para></remarks>
    </member>
    <member name="F:SchlumpfSoft.Controls.SchlumpfSoftControls2Package.PackageGuidString">
      <summary>
Paket-GUID</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.SchlumpfSoftControls2Package.InitializeAsync(System.Threading.CancellationToken,System.IProgress{Microsoft.VisualStudio.Shell.ServiceProgressData})">
      <summary>
<para>Initialisierung des Pakets; diese Methode wird unmittelbar nach dem Einbinden (Siting) des Pakets aufgerufen. </para> <para>Hier gehört jeglicher Initialisierungscode hin, der von durch Visual Studio bereitgestellten Diensten abhängt.</para></summary>
      <returns>
<para>Eine Aufgabe, die die asynchrone Arbeit der Paketinitialisierung darstellt, oder eine bereits abgeschlossene Aufgabe, falls keine Arbeit anfällt. </para> <para>Geben Sie aus dieser Methode nicht null zurück.</para></returns>
      <param name="cancellationToken">
Ein Abbruchtoken zur Überwachung eines Abbruchs der Initialisierung, z. B. beim Herunterfahren von VS.</param>
      <param name="progress">
Ein Anbieter für Fortschrittsaktualisierungen.</param>
    </member>
    <member name="N:SchlumpfSoft.Controls.SevenSegmentControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit">
      <summary>
Stellt ein Control dar, das mehrere Siebensegmentanzeigen enthält.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.#ctor">
      <summary>
Initialisiert eine neue Instanz von <see cref="SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit" />.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.InactiveColor">
      <summary>
Legt die Farbe inaktiver Segmente fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.SegmentWidth">
      <summary>
Legt die Breite der LED-Segmente fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.ItalicFactor">
      <summary>
Scherkoeffizient für die Kursivschrift der Anzeige.</summary>
      <remarks>
Standardwert ist -0.1</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.ShowDecimalPoint">
      <summary>
Gibt an, ob die Dezimalpunkt-LED angezeigt wird.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.DigitCount">
      <summary>
Anzahl der Digits in diesem Control.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.DigitPadding">
      <summary>
Auffüllung, die für jedes Digit im Control gilt.</summary>
      <remarks>
Passen Sie diese Zahlen an, um das perfekte Erscheinungsbild für das Control Ihrer Größe zu erhalten.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.Value">
      <summary>
Der auf dem Control anzuzeigende Wert.</summary>
      <remarks>
Kann Zahlen, bestimmte Buchstaben und Dezimalpunkte enthalten.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.BackColor">
      <summary>
Legt die Hintergrundfarbe des Controls fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.ForeColor">
      <summary>
Legt die Vordergrundfarbe der Segmente des Controls fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.BackgroundImage">
      <summary>
ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.BackgroundImageLayout">
      <summary>
ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.Font">
      <summary>
ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.Text">
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.RightToLeft">
      <summary>
ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.SevenSegmentControl.MultiDigit.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <param name="e">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit">
      <summary>
<para>Dieses Steuerelement stellt ein einzelnes Siebensegment-LED-Display dar, </para> <para>das eine Ziffer oder einen Buchstaben anzeigt.</para></summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.#ctor">
      <summary>
Wird ausgeführt wenn eine neue Instanz dieses Controls erstellt wird.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.InactiveColor">
      <summary>
Legt die Farbe inaktiver Segmente fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.SegmentWidth">
      <summary>
Legt die Breite der LED-Segmente fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.ItalicFactor">
      <summary>
Scherkoeffizient für die Kursivschrift der Anzeige.</summary>
      <remarks>
Standarwert ist -0,1.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.DigitValue">
      <summary>
Legt das anzuzeigende Zeichen fest oder gibt dieses zurück.</summary>
      <remarks>
Unterstützte Zeichen sind Ziffern und die meisten Buchstaben.</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.CustomBitPattern">
      <summary>
<para>Legt ein benutzerdefiniertes Bitmuster fest, das in den sieben Segmenten angezeigt werden soll.</para> <para>Dies ist ein ganzzahliger Wert, bei dem die Bits 0 bis 6 den jeweiligen LED-Segmenten entsprechen.</para></summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.ShowDecimalPoint">
      <summary>
Gibt an, ob die Dezimalpunkt-LED angezeigt wird.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.DecimalPointActive">
      <summary>
Gibt an, ob die Dezimalpunkt-LED aktiv ist.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.ShowColon">
      <summary>
Gibt an, ob die Doppelpunkt-LEDs angezeigt werden.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.ColonActive">
      <summary>
Gibt an, ob die Doppelpunkt-LEDs aktiv sind.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.BackColor">
      <summary>
Legt die Hintergrundfarbe des Controls fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.ForeColor">
      <summary>
Legt die Vordergrundfarbe der Segmente des Controls fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.BackgroundImage">
      <summary>
ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.BackgroundImageLayout">
      <summary>
ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.Font">
      <summary>
ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.Text">
      <summary>
ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.RightToLeft">
      <summary>
ausgeblendet da nicht relevant.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.OnPaddingChanged(System.EventArgs)">
      <summary>
Löst das PaddingChanged-Ereignis aus.</summary>
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
Zeichnet den Hintergrund des Steuerelements.</summary>
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit.Finalize">
      <summary>
<para>Gibt nicht verwaltete Ressourcen frei und führt weitere Bereinigungsvorgänge durch, </para> <para>bevor <see cref="SchlumpfSoft.Controls.SevenSegmentControl.SingleDigit" /> durch die Garbage Collection zurückgefordert wird.</para></summary>
    </member>
    <member name="N:SchlumpfSoft.Controls.ShapeControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.ShapeControl.DiagonalLineModes">
      <summary>
Legt fest in welcher Richtung die diagonale Linie gezeichnet wird</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.ShapeControl.DiagonalLineModes.TopLeftToBottomRight">
      <summary>
von links oben nach rechts unten</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.ShapeControl.DiagonalLineModes.BottomLeftToTopRight">
      <summary>
von links unten nach rechts oben</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.ShapeControl.Shape">
      <summary>
Steuerelement zum Darstellen einer Linie, eines Rechtecks oder einer Ellipse.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.ShapeControl.Shape.#ctor">
      <summary>
Initialisiert eine neue Instanz von <see cref="SchlumpfSoft.Controls.ShapeControl.Shape" />.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.ShapeModus">
      <summary>
Legt die anzuzeigende Form fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.LineWidth">
      <summary>
Legt die Breite der Linie oder Rahmenlinie fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.LineColor">
      <summary>
Legt die Farbe der Linie oder Rahmenlinie fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.FillColor">
      <summary>
Legt die Füllfarbe für die Form fest oder gibt diese zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.DiagonalLineModus">
      <summary>
Legt fest ob eine diagonale Linie von links oben nach rechts unten oder umgekehrt verläuft oder gibt dieses zurück.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.CreateParams">
      <summary>
Legt spezielle Parameter für das ShapeControl fest</summary>
      <remarks>
https://stackoverflow.com/questions/511320/transparent-control-backgrounds-on-a-vb-net-gradient-filled-form</remarks>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.BackColor">
      <summary>
ausgeblendet da nicht relevant</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.BackgroundImage">
      <summary>
ausgeblendet da nicht relevant</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.BackgroundImageLayout">
      <summary>
ausgeblendet da nicht relevant</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.Font">
      <summary>
ausgeblendet da nicht relevant</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.ForeColor">
      <summary>
ausgeblendet da nicht relevant</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.RightToLeft">
      <summary>
ausgeblendet da nicht relevant</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.ShapeControl.Shape.Text">
      <summary>
ausgeblendet da nicht relevant</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.ShapeControl.Shape.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
zeichnet das ShapeControl neu</summary>
      <param name="e">
Ein <see cref="System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.ShapeControl.Shape.Dispose(System.Boolean)">
      <summary>
Gibt die vom <see cref="SchlumpfSoft.Controls.ShapeControl.Shape" /> verwendeten nicht verwalteten Ressourcen frei und gibt optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
<para>Wenn auf <see langword="true" /> gesetzt, dann werden verwaltete und nicht verwaltete Ressourcen freigegeben</para> <para>andernfalls nur nicht verwaltete Ressourcen.</para></param>
    </member>
    <member name="T:SchlumpfSoft.Controls.ShapeControl.ShapeModes">
      <summary>
Legt fest welche Form gezeichnet wird</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.ShapeControl.ShapeModes.HorizontalLine">
      <summary>
Horizontale Linie</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.ShapeControl.ShapeModes.VerticalLine">
      <summary>
Vertikale Linie</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.ShapeControl.ShapeModes.DiagonalLine">
      <summary>
diagonale Linie</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.ShapeControl.ShapeModes.Rectangle">
      <summary>
Rechteck</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.ShapeControl.ShapeModes.FilledRectangle">
      <summary>
gefülltes Rechteck</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.ShapeControl.ShapeModes.Ellipse">
      <summary>
Kreis oder Ellipse</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.ShapeControl.ShapeModes.FilledEllipse">
      <summary>
gefüllter Kreis oder gefüllte Ellipse</summary>
    </member>
    <member name="N:SchlumpfSoft.Controls.TransparentLabelControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.TransparentLabelControl.TransparentLabel">
      <summary>
Ein Steuerelement zum Anzeigen eines Textes mit durchscheinendem Hintergrund.</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.TransparentLabelControl.TransparentLabel.#ctor">
      <summary>
Initialisiert eine neue Instanz der <see cref="TransparentLabel" />-Klasse.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.TransparentLabelControl.TransparentLabel.BackColor">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.TransparentLabelControl.TransparentLabel.BackgroundImage">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.TransparentLabelControl.TransparentLabel.BackgroundImageLayout">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.TransparentLabelControl.TransparentLabel.FlatStyle">
      <summary>
Ausgeblendet da für dieses Control nicht relevant.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.TransparentLabelControl.TransparentLabel.CreateParams">
      <summary>
Gibt die Erstellungsparameter für das Steuerelement zurück und aktiviert die Transparenz.</summary>
      <value>
Die angepassten <see cref="CreateParams" /> mit aktiviertem WS_EX_TRANSPARENT-Stil.</value>
    </member>
    <member name="M:SchlumpfSoft.Controls.TransparentLabelControl.TransparentLabel.Dispose(System.Boolean)">
      <summary>
Bereinigt die von der <see cref="TransparentLabel" /> verwendeten Ressourcen.</summary>
      <param name="disposing">
Gibt an, ob verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="N:SchlumpfSoft.Controls.WizardControl">
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.AfterSwitchPagesEventArgs">
      <summary>
Enthält die Indexwerte der Seiten nachdem die Seiten gewechselt wurden.</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.WizardControl.AfterSwitchPagesEventArgs._NewIndex">
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.AfterSwitchPagesEventArgs.OldIndex">
      <summary>
Index der alten Seite</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.AfterSwitchPagesEventArgs.NewIndex">
      <summary>
Index der neuen Seite</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.BeforeSwitchPagesEventArgs">
      <summary>
Enthält die Indexwerte der Seiten bevor die Seiten gewechselt werden.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.BeforeSwitchPagesEventArgs.Cancel">
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.BeforeSwitchPagesEventArgs.NewIndex">
      <summary>
Index der neuen Seite</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.PageCustom">
      <summary>
Definiert eine Benutzerdefinierte Seite</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.PageCustom.Style">
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.PageFinish">
      <summary>
Definiert die Abschlußseite</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.PageFinish.Style">
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.PagesCollection">
      <summary>
Definiert die Auflistung der Seiten des Assistenten</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.PagesCollection.Item(System.Int32)">
      <param name="Index">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.PagesCollection.Add(SchlumpfSoft.Controls.WizardControl.WizardPage)">
      <param name="Page">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.PagesCollection.AddRange(SchlumpfSoft.Controls.WizardControl.WizardPage[])">
      <param name="Pages">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.PagesCollection.IndexOf(SchlumpfSoft.Controls.WizardControl.WizardPage)">
      <param name="Page">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.PagesCollection.Insert(System.Int32,SchlumpfSoft.Controls.WizardControl.WizardPage)">
      <param name="Index">
</param>
      <param name="Page">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.PagesCollection.Remove(SchlumpfSoft.Controls.WizardControl.WizardPage)">
      <param name="Page">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.PagesCollection.Contains(SchlumpfSoft.Controls.WizardControl.WizardPage)">
      <param name="Page">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.PagesCollection.OnInsertComplete(System.Int32,System.Object)">
      <param name="Index">
</param>
      <param name="Value">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.PagesCollection.OnRemoveComplete(System.Int32,System.Object)">
      <param name="Index">
</param>
      <param name="Value">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.PageStandard">
      <summary>
Definiert eine Standardseite</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.PageStandard.Style">
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.PageStyle">
      <summary>
Auflistung der verfügbaren Seitenstile</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.WizardControl.PageStyle.Standard">
      <summary>
Stellt eine Standardseite dar.</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.WizardControl.PageStyle.Welcome">
      <summary>
Stellt die Willkommensseite dar.</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.WizardControl.PageStyle.Finish">
      <summary>
Stellt die Abschlußseite dar.</summary>
    </member>
    <member name="F:SchlumpfSoft.Controls.WizardControl.PageStyle.Custom">
      <summary>
Stellt eine Benutzerdefinierte Seite dar.</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.PageWelcome">
      <summary>
Definiert die Willkommenseite</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.PageWelcome.Style">
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.Wizard">
      <summary>
Ein Control zum erstellen eines Assistenten</summary>
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.Wizard.BeforeSwitchPagesEventHandler">
      <param name="sender">
</param>
      <param name="e">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.Wizard.AfterSwitchPagesEventHandler">
      <param name="sender">
</param>
      <param name="e">
</param>
    </member>
    <member name="E:SchlumpfSoft.Controls.WizardControl.Wizard.BeforeSwitchPages">
      <summary>
Tritt auf, bevor die Seiten des Assistenten gewechselt werden, um dem Benutzer die Möglichkeit zur Validierung zu geben.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.WizardControl.Wizard.AfterSwitchPages">
      <summary>
Tritt auf, nachdem die Seiten des Assistenten gewechselt wurden, und gibt dem Benutzer die Möglichkeit, die neue Seite einzurichten.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.WizardControl.Wizard.Cancel">
      <summary>
Tritt auf wenn der Benutzer auf Abbrechen geklickt hat.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.WizardControl.Wizard.Finish">
      <summary>
Tritt auf, wenn der Assistent abgeschlossen ist, und gibt dem Benutzer die Möglichkeit, zusätzliche Aufgaben zu erledigen.</summary>
    </member>
    <member name="E:SchlumpfSoft.Controls.WizardControl.Wizard.Help">
      <summary>
Tritt auf, wenn der Benutzer auf die Hilfeschaltfläche klickt.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.VisibleHelp">
      <summary>
Ruft die Sichtbarkeit Status der Hilfeschaltfläche ab oder legt diesen fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.Pages">
      <summary>
Ruft die Auflistung der Assistentenseiten in diesem Registerkartensteuerelement ab.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.ImageHeader">
      <summary>
Ruft das in der Kopfzeile der Standardseiten angezeigte Bild ab oder legt dieses fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.ImageWelcome">
      <summary>
Ruft das auf den Begrüßungs- und Abschlussseiten angezeigte Bild ab oder legt es fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.Dock">
      <summary>
Ruft ab oder legt fest, an welcher Kante des übergeordneten Containers ein Steuerelement angedockt ist.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.SelectedPage">
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.HeaderFont">
      <summary>
Ruft die Schriftart ab, die zum Anzeigen der Beschreibung einer Standardseite verwendet wird, oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.HeaderTitleFont">
      <summary>
Ruft die Schriftart ab, die zum Anzeigen des Titels einer Standardseite verwendet wird, oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.WelcomeFont">
      <summary>
Ruft die Schriftart ab, die zum Anzeigen der Beschreibung einer Begrüßungs- oder Abschlussseite verwendet wird, oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.WelcomeTitleFont">
      <summary>
Ruft die Schriftart ab, die zum Anzeigen des Titels einer Begrüßungs- oder Abschlussseite verwendet wird, oder legt diese fest.</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.NextEnabled">
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.BackEnabled">
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.NextText">
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.BackText">
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.CancelText">
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.Wizard.HelpText">
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.#ctor">
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.Next">
      <summary>
Entspricht einem Klick auf die Schaltfläche "weiter".</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.Back">
      <summary>
Entspricht einem Klick auf die Schaltfläche "zurück".</summary>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.OnBeforeSwitchPages(SchlumpfSoft.Controls.WizardControl.BeforeSwitchPagesEventArgs)">
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.OnAfterSwitchPages(SchlumpfSoft.Controls.WizardControl.AfterSwitchPagesEventArgs)">
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.OnCancel(System.ComponentModel.CancelEventArgs)">
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.OnFinish(System.EventArgs)">
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.OnHelp(System.EventArgs)">
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.OnLoad(System.EventArgs)">
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.OnResize(System.EventArgs)">
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <param name="e">
</param>
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.Wizard.Dispose(System.Boolean)">
      <param name="disposing">
</param>
    </member>
    <member name="T:SchlumpfSoft.Controls.WizardControl.WizardPage">
      <summary>
Definiert eine Seite des Controls</summary>
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.WizardPage.Style">
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.WizardPage.Title">
    </member>
    <member name="P:SchlumpfSoft.Controls.WizardControl.WizardPage.Description">
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.WizardPage.#ctor">
    </member>
    <member name="M:SchlumpfSoft.Controls.WizardControl.WizardPage.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <param name="e">
</param>
    </member>
    <member name="N:SchlumpfSoft.Controls">
    </member>
  </members>
</doc>
